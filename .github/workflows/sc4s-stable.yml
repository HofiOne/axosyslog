name: SC4S stable

on:
  workflow_dispatch:
    inputs:
      owner:
        description: 'SC4S repository owner'
        required: true
        default: 'splunk'
        type: string
      repo:
        description: 'SC4S repository'
        required: true
        default: 'splunk-connect-for-syslog'
        type: string
      ref:
        description: 'SC4S ref (branch, tag, commit id)'
        required: false
        type: string
      syslog-ng-image-version:
        description: 'syslog-ng image version'
        required: true
        default: 'nightly' # until https://github.com/syslog-ng/syslog-ng/pull/4390 is released
        #default: 'latest'
        type: string
  pull_request:
    paths:
      - 'sc4s/**'
      - '.github/workflows/**'
  push:
    paths:
      - 'sc4s/**'
      - '.github/workflows/**'
    branches:
      - '**'
    tags:
      - 'sc4s-*'

env:
  DOCKER_IMAGE_NAME: ghcr.io/axoflow/syslog-ng-splunk-connector
  PLATFORMS: linux/amd64,linux/arm64
  SC4S_OWNER: ${{ inputs.owner || 'splunk' }}
  SC4S_REPO: ${{ inputs.repo || 'splunk-connect-for-syslog' }}
  SYSLOG_NG_IMG_VERSION: ${{ inputs.syslog-ng-image-version || 'nightly' }}

jobs:
  detect-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.ref }}
    steps:
      - name: Detect SC4S version
        id: version
        uses: actions/github-script@v6
        with:
          script: |
            const input_ref = '${{ inputs.ref }}';
            if (input_ref) {
              console.log('Version from workflow input: ' + input_ref);
              core.setOutput('ref', input_ref);
              return;
            }

            if (context.ref.startsWith('refs/tags/sc4s-')) {
              const tag = "v" + context.ref.replace("refs/tags/sc4s-", "");
              console.log('Version from tag: ' + tag);
              core.setOutput('ref', tag);
              return;
            }

            const { SC4S_OWNER, SC4S_REPO } = process.env;
            const latest_release = await github.rest.repos.getLatestRelease({
              owner: SC4S_OWNER,
              repo: SC4S_REPO,
            });

            if (!/^v[0-9]/.test(latest_release.data.tag_name)) {
              core.setFailed('Latest release tag mismatch');
              return;
            }

            console.log('Version (latest): ' + latest_release.data.tag_name);
            core.setOutput('ref', latest_release.data.tag_name)

  build-and-test:
    runs-on: ubuntu-latest
    needs: detect-version
    services:
      splunk:
        image: splunk/splunk:latest
        ports:
          - 8000:8000
          - 8088:8088
          - 8089:8089
        env:
          SPLUNK_HEC_TOKEN: 70b6ae71-76b3-4c38-9597-0c5b37ad9630
          SPLUNK_PASSWORD: Changed@11
          SPLUNK_START_ARGS: --accept-license
          SPLUNK_APPS_URL: https://github.com/splunk/splunk-configurations-base-indexes/releases/download/v1.0.0/splunk_configurations_base_indexes-1.0.0.tar.gz
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Checkout SC4S source
        uses: actions/checkout@v3
        with:
          repository: ${{ env.SC4S_OWNER }}/${{ env.SC4S_REPO }}
          ref: ${{ needs.detect-version.outputs.version }}
          path: sc4s/splunk-connect-for-syslog

      - name: Build and export Docker image
        uses: docker/build-push-action@v3
        with:
          context: sc4s
          file: sc4s/Dockerfile
          load: true
          tags: sc4s:test
          build-args: |
            SYSLOGNG_VERSION=${{ env.SYSLOG_NG_IMG_VERSION }}

      - name: Smoke test
        working-directory: sc4s/splunk-connect-for-syslog
        run: |
          docker run -d --network host \
            -e SC4S_DEST_SPLUNK_HEC_DEFAULT_URL="https://127.0.0.1:8088" \
            -e SC4S_DEST_SPLUNK_HEC_DEFAULT_TOKEN="70b6ae71-76b3-4c38-9597-0c5b37ad9630" \
            -e SC4S_DEST_SPLUNK_HEC_DEFAULT_TLS_VERIFY="no" \
            -e SC4S_DEBUG_CONTAINER="yes" \
            sc4s:test

          pip3 install poetry
          poetry install
          poetry run pytest -v -n8 --splunk_type=external --splunk_hec_token=70b6ae71-76b3-4c38-9597-0c5b37ad9630 \
            tests/test_loggen.py

  publish-image:
    if: github.repository_owner == 'axoflow' && startsWith(github.ref, 'refs/tags/sc4s-')
    needs: [detect-version, build-and-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Checkout SC4S source
        uses: actions/checkout@v3
        with:
          repository: ${{ env.SC4S_OWNER }}/${{ env.SC4S_REPO }}
          ref: ${{ needs.detect-version.outputs.version }}
          path: sc4s/splunk-connect-for-syslog

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (SC4S version) for Docker
        id: tags
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: type=match,pattern=sc4s-(.*),group=1
          sep-tags: ','

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: sc4s
          file: sc4s/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            SYSLOGNG_VERSION=${{ env.SYSLOG_NG_IMG_VERSION }}
